package nz.ac.massey.cs.assignment1;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;


import fr.opensagres.xdocreport.converter.ConverterTypeTo;
import fr.opensagres.xdocreport.converter.ConverterTypeVia;
import fr.opensagres.xdocreport.converter.Options;
import fr.opensagres.xdocreport.document.IXDocReport;
import fr.opensagres.xdocreport.document.PdfConverter;
import fr.opensagres.xdocreport.document.PdfOptions;
 
public class HelloWorldToPDF {
 
	public static void main(String[] args) {
		createPDF();
	}
 
	private static <XWPFDocument, PdfOptions,PdfConverter> void createPDF() {
		try {
			long start = System.currentTimeMillis();
 
			// 1) Load DOCX into XWPFDocument
			InputStream is = new FileInputStream(new File("odt/HelloWorld.odt"));
			XWPFDocument document = new XWPFDocument(is);
 
			// 2) Prepare Pdf options
			PdfOptions options = PdfOptions.create().fontEncoding("windows-1250");
 
			// 3) Convert XWPFDocument to Pdf
			OutputStream out = new FileOutputStream(new File("pdf/HelloWorld.pdf"));
			PdfConverter.getInstance().convert(document, out, options);
			
			System.err.println("Generate pdf/HelloWorld.pdf with "
					+ (System.currentTimeMillis() - start) + "ms");
			
		} catch (Throwable e) {
			e.printStackTrace();
		}
	}
	
	// 1) Load ODT into ODFDOM OdfTextDocument 
	InputStream in= new FileInputStream(new File("HelloWord.odt"));
	OdfTextDocument document = OdfTextDocument.loadDocument(in);

	// 2) Prepare Pdf options
	PdfOptions options = PdfOptions.create();

	// 3) Convert OdfTextDocument to PDF via IText
	OutputStream out = new FileOutputStream(new File("HelloWord.pdf"));
	PdfConverter.getInstance().convert(document, out, options);
	
	
	
	