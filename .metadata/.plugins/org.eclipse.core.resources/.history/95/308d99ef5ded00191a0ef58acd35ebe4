package nz.ac.massey.cs.assignment1;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

import javax.swing.AbstractButton;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

import javafx.scene.text;

/*public class Replace extends JFrame {
	private static final long serialVersionUID = 1L;
	public JPanel pnl_mian;
	public JLabel lbl_help;
	public JLabel lbl_find;
	public JLabel lbl_replace;
	public JTextField txt_find;
	public JTextField txt_replace;
	public JButton btn_sub;
	public JButton btn_reset;
	public static String find;
	public static String replace;
	public Replace() {
		pnl_mian = new JPanel();
		lbl_help = new JLabel();
		lbl_find = new JLabel();
		lbl_replace = new JLabel();
		txt_find = new JTextField();
		txt_replace = new JTextField();
		btn_sub = new JButton();
		btn_reset = new JButton();
		userInit();
	}
	public void userInit() {
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setSize(500, 300);
		this.setResizable(false);
		this.setTitle("Search Replace");
		this.pnl_mian.setLayout(null);
		this.lbl_help.setText("Search Replace");
		this.lbl_find.setText("search:");
		this.lbl_replace.setText("replace:");
		this.btn_sub.setText("confirm");
		this.btn_reset.setText("reset");
		this.lbl_help.setBounds(200, 25, 100, 21);
		
		this.lbl_find.setBounds(100, 80, 60, 20);
		this.lbl_replace.setBounds(100, 110, 60, 25);
		
		this.txt_find.setBounds(150, 80, 200, 20);
		this.txt_replace.setBounds(150, 110, 200, 20);
		this.btn_sub.setBounds(130, 180, 80, 20);
		this.btn_sub.addActionListener(new ActionListener()
				{
					public void actionPerformed(ActionEvent e) {
						btnsub_ActionEvent(e);
					}
				});
		this.btn_reset.setBounds(245, 180, 80, 20);
		this.btn_reset.addActionListener(new ActionListener()
				{
					public void actionPerformed(ActionEvent e) {
						btnreset_ActionEvent(e);
					}
				});
		this.pnl_mian.add(lbl_help);
		this.pnl_mian.add(lbl_find);
		this.pnl_mian.add(lbl_replace);
		this.pnl_mian.add(txt_find);
		this.pnl_mian.add(txt_replace);
		this.pnl_mian.add(btn_sub);
		this.pnl_mian.add(btn_reset);
		this.add(pnl_mian);
		this.setVisible(true);
	}
 
	public void btnsub_ActionEvent(ActionEvent e) {
		find = txt_find.getText();
		replace = String.valueOf(txt_replace.getText());
		if (find.equals("")) {
			JOptionPane.showMessageDialog(null, "Search object cannot be empty!", "Error",
					JOptionPane.ERROR_MESSAGE);
			return;
		} else if (replace.equals("")) {
			JOptionPane.showMessageDialog(null, "Replace content cannot be empty!", "Error",
					JOptionPane.ERROR_MESSAGE);
			return;
		} else {
			try {
				File file = null;
				changeFile(file);
			} catch (Exception e1) {
				e1.printStackTrace();
				return;
			}
			this.dispose();
		}
	}
	public void btnreset_ActionEvent(ActionEvent e) {
		txt_find.setText("");
		txt_replace.setText("");
	}
 
	public static void changeFile(File file) throws IOException {
		BufferedReader br = null;
		try {
			FileReader fileReader = new FileReader(file);
			br = new BufferedReader(fileReader);
			StringBuffer sbf = new StringBuffer("");
			try {
				for (String tmp = null; (tmp = br.readLine()) != null; tmp = null) {
					
					if (tmp.contains(find)) {
						tmp = tmp.replaceAll(find, replace);
						sbf.append(tmp);
						sbf.append(System.getProperty("line.separator"));
						JOptionPane.showMessageDialog(null, "The file content has been replaced successfully!",
								"confirm", JOptionPane.YES_OPTION);
						br.close();
					} else {
						JOptionPane.showMessageDialog(null, "The file does not contain the content to be replaced��",
								"confirm", JOptionPane.YES_OPTION);
					}
 
				}
				br.close();
			} catch (IOException e1) {
				JOptionPane.showMessageDialog(null, "Read file error", "Error",
						JOptionPane.ERROR_MESSAGE);
				e1.printStackTrace();
				return;
			}
		} 
	}
	public static void main(String[] args) {
		new Replace();
	}

}*/
public class Replace implements ActionListener{
		JLabel label1;
	JTextField fiel,fiel2;
		JButton but1;
		int next;
	void Replace(){
		JFrame frame=new JFrame();
		frame.setSize(350,160);
		frame.setLocation(1000, 400);
		frame.setResizable(false);
		frame.setTitle("查找");
		frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		JPanel jpanel=new JPanel();
		label1=new JLabel("查找内容(N)");
		fiel=new JTextField(10);
		but1=new JButton("查找 下一 个(F)");//对按钮添加事件
		but1.addActionListener(this);
		JLabel label2=new JLabel("替   换  为(P)");
		fiel2=new JTextField(10);
		JButton but2=new JButton("替     换    (   R   )");
		but2.addActionListener(this);
		JButton but3=new JButton("取消");
		jpanel.add(label1);
		jpanel.add(fiel); 
		jpanel.add(but1);
		jpanel.add(label2);
		jpanel.add(fiel2);
		jpanel.add(but2);
		jpanel.add(but3);
		frame.add(jpanel);
		frame.setVisible(true);
		}
	public void actionPerformed(ActionEvent e) {
			AbstractButton text;
			if(e.getActionCommand()=="查找 下一 个(F)") {
				String s=text.getText();
				String m=fiel.getText();
				int x=s.indexOf(m,text.getSelectionEnd());
				int n=x+m.length();
				text.select(x,n);
				next=n;
				text.select(next,s.length());
				String ss=text.getSelectedText();
				int newstartp=ss.indexOf(fiel.getText())+next;				
				int newendp=newstartp+fiel.getText().length();
				text.select(newstartp, newendp);
				
			}
			if(e.getActionCommand()=="替     换    (   R   )") {
				int nexttemp=next;					//获取上次查找的终点做为未查找字符串的起点
				String strall=text.getText();
				text.select(nexttemp, strall.length());	//选中所有未查找的字符串
				String strnext=text.getSelectedText();
			int newstartp=strnext.indexOf(fiel.getText())+nexttemp;
			int newendp=newstartp+fiel.getText().length();
				text.select(newstartp, newendp); //选中字符串
				text.replaceRange(fiel2.getText(), newstartp, newendp); //选中字符替换	
	
				}
			} 
		}
